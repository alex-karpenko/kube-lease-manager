[package]
name = "kube-lease-manager"
authors = ["Oleksii Karpenko <alexkarpenko@yahoo.com>"]
categories = ["api-bindings", "asynchronous"]
description = "Ergonomic and reliable leader election using Kubernetes Lease API."
edition = "2021"
rust-version = "1.81.0"
homepage = "https://github.com/alex-karpenko/kube-lease-manager"
keywords = ["kubernetes", "async", "lease", "leader", "election"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/alex-karpenko/kube-lease-manager"
version = "0.8.0"
exclude = [".github/**", ".vscode/**", "TODO.md", "Cargo.lock", "target/**", ".gitignore", ".cargo/**", "mutants.*/**"]

[dependencies]
k8s-openapi = { version = "0.24.0", default-features = false }
kube = { version = "0.99.0", default-features = false, features = ["client"] }
rand = { version = "0.9.0" }
thiserror = "2.0.3"
tokio = { version = "1.38.0", default-features = false, features = ["sync", "time", "macros"] }
tracing = { version = "0.1.40", default-features = false, features = ["std"] }

[dev-dependencies]
anyhow = "1.0.93"
futures = { version = "0.3.31", default-features = false, features = ["async-await"] }
kube = { version = "0.99.0", default-features = false, features = ["rustls-tls", "runtime"] }
rustls = { version = "0.23.23"}
tokio = { version = "1.38.0", default-features = false, features = ["rt-multi-thread"] }
tracing-subscriber = { version = "0.3.18" }
uuid = { version = "1.10.0", features = ["v4"] }

[package.metadata.docs.rs]
features = ["k8s-openapi/v1_28"]
